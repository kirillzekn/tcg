# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Copy_Files
  
  jobs:
  - job:
    displayName: Copy files
    steps:
      - task: CopyFiles@2
        inputs:
          SourceFolder: 'computerVision/'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - bash: "ls $(Build.ArtifactStagingDirectory)"
      - bash: "cat $(Build.ArtifactStagingDirectory)/azuredeploy.json"

      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Pay-As-You-Go(7eb18278-1682-4ad9-9148-814e2b6039f9)'
          subscriptionId: '7eb18278-1682-4ad9-9148-814e2b6039f9'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'TCG'
          location: 'West Europe'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.ArtifactStagingDirectory)/azuredeploy.json'
          deploymentMode: 'Validation'

      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Pay-As-You-Go(7eb18278-1682-4ad9-9148-814e2b6039f9)'
          subscriptionId: '7eb18278-1682-4ad9-9148-814e2b6039f9'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'TCG'
          location: 'West Europe'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.ArtifactStagingDirectory)/azuredeploy.json'
          deploymentMode: 'Validation'

